version: '3.2'

services:

  # node-exporter
  exporter:
    image: prom/node-exporter:latest
    ports:
      - target: 9100
        published: 9100
        protocol: tcp
        # we bypass the routing mesh as we want to acces
        # local container
        # this one needs compose version >= 3.2
        mode: host
    volumes:
      # we want it to access hosts informations
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /proc:/host/proc:ro
    deploy:
      # it has to be deployed on each hosts in the cluster
      mode: global

  cadvisor:
    image: google/cadvisor:latest
    container_name: cadvisor
    ports:
      - target: 8080
        published: 8888
        protocol: tcp
        # we bypass the routing mesh as we want to acces
        # local container
        # this one needs compose version >= 3.2
        mode: host
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    deploy:
      # it has to be deployed on each hosts in the cluster
      mode: global
    

  # prometheus 
  metheus:
    image: 172.17.8.101:5000/prometheus
    build: .
    ports:
      - "9090:9090"
    volumes:
      - data:/prometheus
    restart: "always"
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
          - node.labels.registry == true
  # grafana
  grafana:
    image: grafana/grafana 
    ports:
      - "3000:3000"
    restart: "always"
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
          - node.labels.registry == true

volumes:
  data:
